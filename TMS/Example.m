%clc
%clear all          % необходимо провести несколько итераций, при этом результаты необходимо сохранять
close all

%% ЛЕГЕНДА
% N - общее число отсчетов
% M - число периодов несущей на одном радиоимпульсе
% K - число дискретных отсчетов на период несущей
% L - разрядность кода Баркера
% U - амплитуда
% C - вектор бинарного кода Баркера

%% ВХОДНЫЕ ДАННЫЕ
M = 1;
K = 512;
U = sqrt(2); 
C = [1 1 1 -1 -1 -1 1 -1 -1 1 -1];
L = size(C,2);
N = M*L*K;


sig=FCMSIG( N, M, K, L, U, C );     % формирование ФКМ при помощи прописанной нами функции

%% ВИЗУАЛИЗАЦИЯ ФКМ СИГНАЛА

j=[1:size(sig,2)];      % для "красивой" оси X на графике
C1(2:L+1)=C(1:L);       % для наглядности кода Баркера на графике (обычный вид)
C1(1)=C(1);             % "нулевой" отсчет кода Баркера для наглядности графика

C2(1)=C(1);             % "нулевой" отсчет кода Баркера для наглядности графика
C2(2:L)=C(2:L);         % для наглядности кода Баркера на графике (ступенчатый вид)
C2(L+1)=C(L);           % "крайний"  отсчет кода Баркера для наглядности графика

figure                  % обычная визуализация последовательности Баркера
plot(j/K, sig, '-r', 'LineWidth', 1)
grid on
hold on
plot((0:L), C1, '--g', 'LineWidth', 2.5)
set(gca, 'XTick', 0:1:L)
axis([0 L min(sig) max(sig)])
legend('ФКМ','Код Баркера')

figure                  % ступенчатая визуализация последовательности Баркера
plot(j/K, sig, '-r', 'LineWidth', 1)
grid on
hold on
stairs((0:L),C2, '--g', 'LineWidth', 2.5)
set(gca, 'XTick', 0:1:L)
axis([0 L min(sig) max(sig)])
legend('ФКМ','Код Баркера')

%% АВКОРРЕЛЯЦИОННАЯ ФУНКЦИЯ

M=4;
K=40;
N = M*L*K;                          % в оригинале это делается позже, но без этого не работает уже здесь

sig=FCMSIG( N, M, K, L, U, C );     % пересчет ФКМ для измененных параметров

X=xcorr(sig);                       % встроенная функция подсчета АКФ

C(4)=1; C(5)=1;                     % умышленно "ломаем" код Баркера

sig2=FCMSIG( N, M, K, L, U, C );    % ФКМ от уже НЕбаркеровского кода

X2=xcorr(sig2);                     % АКФ небаркеровского кода (боковые лепестки увеличатся по определению)

figure
plot(X2/N, '-m', 'LineWidth', 2.5)
hold on
grid on
plot(X/N, '-g', 'LineWidth', 1)
title('Нормированные автокорреляционные функции ФКМ сигналов')
legend('"Небарковский код"','Код Баркера')

%%

Pin=sum(sig.^2)/N;
Es=X(N);
Esp=fft(X)/N;
Espi=abs(fftshift(Esp));

figure
plot(Espi, '-r', 'LineWidth', 0.75)
grid on
hold on
title('Амплитудный спектр')
axis([0 size(Espi, 2) min(Espi) max(Espi)])

%% РЕАЛИЗАЦИЯ ГАУССОВА ШУМА

Kn=1;            % дисперсия шума
%N=1760;         % посчитали ранее "N = M*L*K"

NR=Kn*randn(1,N);
NACF=xcorr(NR);

En=sum(NR.^2);      % энергия шума
%WN=fft(NACF)/N;    % согласно примечанию возможен вариант "WN=fft(NACF)/N" 
WN=ifft(NACF);      % но так лучше результаты, ближе к тому, что он сам насчитал
WNa=abs(WN);        % получили спектральную плотность мощности (СПМ)

figure
plot(NR, '-r', 'LineWidth', 0.75)
grid on
hold on
title('Реализация гауссовского шума')
axis([0 size(NR, 2) min(NR) max(NR)])


figure
stem(NACF, '-b', 'LineWidth', 1)
grid on
hold on
title('АКФ гауссовского шума')
axis([0 size(NACF, 2) min(NACF) max(NACF)])

figure
stem(WNa, '-m', 'LineWidth', 0.75)
grid on
hold on
title('СПМ')
axis([0 size(WNa, 2) min(WNa) max(WNa)])

%% МАШИННЫЙ ЭКСПЕРИМЕНТ

% Kn=0                                  % расскоментируем для моделирования без шума
%  U=0                                   % расскоментируем для моделирования без сигнала

C = [1 1 1 -1 -1 -1 1 -1 -1 1 -1];      % сделали код снова баркеровским (в оригинале не прописано)

sig=FCMSIG( N, M, K, L, U, C );     % пересчет ФКМ для измененных параметров

FKM=FCMSIG( N, M, K, L, 1, C );
SN=sig+NR;
X=xcorr(SN, sqrt(2).*FKM);




if (Kn==0)                              % ветка моделирования случая без шума
   Ppeac=X(N)^2;
end

if (U==0)                               % ветка моделирования случая без сигнала
    NOI=sum(WNa)/N;
    Dout=sum(X.^2)/N;
end

%% ВЫВОД ЧИСЛЕННЫХ РЕЗУЛЬТАТОВ
% Предварительно нужно запустить программу по отдельности для случаев без шума и без сигнала
% Возможно потребуется усреднение из нескольких реализаций

Pin=Pin                     % ориентировочное значение Pin=1
Es=Es                       % ориентировочное значение Es=1760
Ppeac=Ppeac                 % ориентировочное значение Ppeac=3.098e+06
ES_NOI=Es/NOI               % ориентировочное значение Es/NOI~=1793
Ppeac_Dout=Ppeac/Dout       % ориентировочное значение Ppeac/Dout~=1817
